Git学习笔记
 
一、Git基础概念
 
Git是分布式版本控制系统，主要用于管理项目代码变更，助力团队协作开发。与集中式不同，Git仓库在开发者本地，开发者能在本地独立完成版本管理，不依赖中央服务器 。
 
二、常用命令
 
日常操作
 
1. 初始化仓库：在项目目录执行 git init ，会创建隐藏的.git目录，标志该目录成为Git可管理仓库。
2. 文件状态查看： git status 用于查看工作区和暂存区文件状态，告知哪些文件已修改、未跟踪或已暂存。
3. 文件添加与提交： git add 将文件从工作区添加到暂存区，如 git add. 添加所有文件。接着用 git commit -m "提交说明" 将暂存区文件提交到本地仓库，提交说明要清晰描述变更。
4. 查看提交历史： git log 展示提交历史，含提交者、时间和说明。加上 --pretty=oneline 参数可简洁查看。
 
分支管理
 
1. 分支查看与创建： git branch 查看本地分支， git branch [分支名] 创建新分支。
2. 分支切换与合并： git checkout [分支名] 切换分支； git merge [分支名] 将指定分支合并到当前分支。若合并时出现冲突，需手动解决。
3. 删除分支： git branch -d [分支名] 删除指定分支， -D 可强制删除未合并的分支。
 
远程仓库交互
 
1. 远程仓库关联： git remote add [别名] [远程仓库地址] ，如 git remote add origin https://github.com/user/repo.git 。
2. 推送与拉取： git push [别名] [分支名] 将本地分支推送到远程仓库； git pull [别名] [分支名] 从远程仓库拉取并合并到本地分支。
3. 查看远程信息： git remote -v 查看远程仓库的别名和对应的URL 。
 
标签操作
 
1. 创建标签： git tag [标签名] 为当前提交创建轻量标签， git tag -a [标签名] -m "标签说明" 创建附注标签，需添加说明。
2. 查看标签： git tag 查看所有标签。
3. 推送与删除标签： git push [别名] [标签名] 推送单个标签到远程； git push [别名] --tags 推送所有标签。 git tag -d [标签名] 删除本地标签， git push [别名] :refs/tags/[标签名] 删除远程标签。
 
三、解决冲突
 
合并分支时，若同一文件同一区域有不同修改，就会产生冲突。Git会在冲突文件中用特殊标记标明冲突部分。需手动编辑文件，保留正确内容，删除冲突标记，然后重新添加并提交。
 
四、工作流程
 
1. 克隆远程仓库到本地： git clone [远程仓库地址] 。
2. 日常在本地分支开发，完成功能后提交到本地仓库。
3. 定期 git pull 拉取远程更新，解决可能的冲突。
4. 确认无误后 git push 将本地分支推送到远程仓库。
